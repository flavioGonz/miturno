<!--
  File: /home/fgonzalez/turnito/views/sistema.ejs
  Descripci√≥n: Panel avanzado de administraci√≥n del sistema (Turnito Admin)
  Versi√≥n: 2.3 - Full Dark Badges Edition
-->

<div class="card bg-dark text-light shadow-sm border-0">
  <div class="card-header border-bottom border-secondary">
    <h2 class="card-title text-info">
      <i class="ti ti-cpu"></i> Panel del Sistema
    </h2>
  </div>

  <div class="card-body">
    <ul class="nav nav-tabs" id="sysTabs" role="tablist">
      <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#resumen" role="tab"><i class="ti ti-gauge"></i> Resumen</a></li>
      <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#acciones" role="tab"><i class="ti ti-tools"></i> Acciones</a></li>
      <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#red" role="tab"><i class="ti ti-network"></i> Red</a></li>
      <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#logs" role="tab"><i class="ti ti-terminal-2"></i> Logs</a></li>
      <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#servicios" role="tab"><i class="ti ti-settings"></i> Servicios</a></li>
      <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#fullpageos" role="tab"><i class="ti ti-browser"></i> FullPageOS</a></li>
    </ul>

    <div class="tab-content pt-3">
      <!-- üîπ RESUMEN -->
      <div class="tab-pane fade show active" id="resumen" role="tabpanel">
        <div class="row g-3">
          <div class="col-md-4"><div class="card bg-black text-light p-3"><strong>Temperatura:</strong> <span id="temp">--</span> ¬∞C</div></div>
          <div class="col-md-4"><div class="card bg-black text-light p-3"><strong>CPU:</strong> <span id="cpu">--</span>%</div></div>
          <div class="col-md-4"><div class="card bg-black text-light p-3"><strong>RAM:</strong> <span id="ram">--</span>%</div></div>
          <div class="col-md-4"><div class="card bg-black text-light p-3"><strong>SWAP:</strong> <span id="swap">--</span>%</div></div>
          <div class="col-md-4"><div class="card bg-black text-light p-3"><strong>Disco:</strong> <span id="disk">--</span></div></div>
          <div class="col-md-4"><div class="card bg-black text-light p-3"><strong>Procesos:</strong> <span id="proc">--</span></div></div>
          <div class="col-md-12"><div class="card bg-black text-light p-3"><strong>Uptime:</strong> <span id="uptime">--</span></div></div>
        </div>
      </div>

      <!-- üîπ ACCIONES -->
      <div class="tab-pane fade" id="acciones" role="tabpanel">
        <div class="d-grid gap-3">
          <button class="btn btn-warning fw-bold" id="reboot"><i class="ti ti-refresh"></i> Reiniciar</button>
          <button class="btn btn-danger fw-bold" id="shutdown"><i class="ti ti-power"></i> Apagar</button>
          <button class="btn btn-info fw-bold" id="update"><i class="ti ti-cloud-upload"></i> Actualizar SO</button>
        </div>

        <div class="mt-4 p-3 bg-black rounded">
          <h4><i class="ti ti-device-laptop"></i> Cambiar Hostname</h4>
          <input type="text" id="hostnameInput" class="form-control bg-dark text-light border-0 my-2" placeholder="Nuevo hostname">
          <button class="btn btn-primary" id="setHostname"><i class="ti ti-check"></i> Guardar</button>
        </div>

        <div class="mt-4 p-3 bg-black rounded">
          <h4><i class="ti ti-clock"></i> Cambiar Hora</h4>
          <input type="datetime-local" id="datetimeInput" class="form-control bg-dark text-light border-0 my-2">
          <button class="btn btn-success" id="setTime"><i class="ti ti-clock-check"></i> Aplicar</button>
        </div>
      </div>

      <!-- üîπ RED -->
      <div class="tab-pane fade" id="red" role="tabpanel">
        <h4><i class="ti ti-wifi"></i> Informaci√≥n de Red</h4>
        <pre id="networkInfo" class="bg-black text-success p-3 rounded" style="height:200px; overflow-y:auto;">Cargando interfaces...</pre>
        <button class="btn btn-outline-info mt-2" id="refreshNetwork"><i class="ti ti-reload"></i> Actualizar</button>
      </div>

      <!-- üîπ LOGS -->
      <div class="tab-pane fade" id="logs" role="tabpanel">
        <h4><i class="ti ti-terminal"></i> Logs del sistema</h4>
        <textarea id="pm2Logs" class="form-control bg-black text-success" style="height:250px; overflow-y:auto; font-family:monospace;"></textarea>
        <button class="btn btn-outline-info mt-2" id="refreshLogs"><i class="ti ti-reload"></i> Actualizar Logs</button>
      </div>

      <!-- üîπ SERVICIOS -->
      <div class="tab-pane fade" id="servicios" role="tabpanel">
        <h4><i class="ti ti-activity"></i> Servicios en ejecuci√≥n</h4>
        <table class="table table-dark table-hover table-sm align-middle text-light">
          <thead class="table-secondary text-dark">
            <tr><th>Servicio</th><th>Acciones</th></tr>
          </thead>
          <tbody id="servicesTable"><tr><td colspan="2">Cargando...</td></tr></tbody>
        </table>
        <button class="btn btn-outline-info mt-2" id="refreshServices"><i class="ti ti-refresh"></i> Actualizar</button>
      </div>

      <!-- üîπ FULLPAGEOS -->
      <div class="tab-pane fade" id="fullpageos" role="tabpanel">
        <h4><i class="ti ti-browser"></i> Configuraci√≥n FullPageOS</h4>
        <label>config.txt</label>
        <textarea id="configTxt" class="form-control bg-black text-light" style="height:200px;"></textarea>
        <button class="btn btn-success mt-2" id="saveConfig"><i class="ti ti-device-floppy"></i> Guardar config.txt</button>
        <label class="mt-4">fullpageos.txt</label>
        <textarea id="fpTxt" class="form-control bg-black text-light" style="height:200px;"></textarea>
        <div class="d-flex gap-2 mt-2">
          <button class="btn btn-success" id="saveFP"><i class="ti ti-device-floppy"></i> Guardar fullpageos.txt</button>
          <button class="btn btn-warning" id="restartFP"><i class="ti ti-refresh"></i> Reiniciar FullPageOS</button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
async function getJSON(url, opts={}) {
  const res = await fetch(url, { credentials: 'include', ...opts });
  const text = await res.text();
  try { return JSON.parse(text); } catch { return { error: text }; }
}

// üîÑ Precargar informaci√≥n general
async function refreshSystem() {
  const [t,c,r,s,d,p,u] = await Promise.all([
    getJSON('/api/system/cpu-temp'),
    getJSON('/api/system/cpu-usage'),
    getJSON('/api/system/memory-usage'),
    getJSON('/api/system/swap-usage'),
    getJSON('/api/system/disk-usage'),
    getJSON('/api/system/process-count'),
    getJSON('/api/system/uptime')
  ]);
  document.getElementById('temp').innerText = t.temperature || '--';
  document.getElementById('cpu').innerText = c.cpu_usage || '--';
  document.getElementById('ram').innerText = r.ram || '--';
  document.getElementById('swap').innerText = s.swap || '--';
  document.getElementById('disk').innerText = d.pct || '--';
  document.getElementById('proc').innerText = p.process_count || '--';
  document.getElementById('uptime').innerText = u.uptime || '--';
}

// üñ•Ô∏è Hostname y hora
async function loadHostnameAndTime() {
  const host = await getJSON('/api/system/hostname');
  const time = await getJSON('/api/system/time');
  document.getElementById('hostnameInput').value = host.hostname || '';
  const now = new Date(time.time);
  if (!isNaN(now)) {
    document.getElementById('datetimeInput').value = now.toISOString().slice(0,16);
  }
}

// üíæ Logs
async function loadLogs() {
  const logs = await getJSON('/api/system/logs/journal');
  document.getElementById('pm2Logs').value = logs.logs || 'No se pudieron obtener logs';
  document.getElementById('pm2Logs').scrollTop = document.getElementById('pm2Logs').scrollHeight;
}

// ‚öôÔ∏è Servicios
async function loadServices() {
  const svcs = await getJSON('/api/system/services');
  const table = document.getElementById('servicesTable');
  table.innerHTML = '';
  (svcs.services || '').split('\n').forEach(line => {
    if (!line.includes('.service')) return;
    const name = line.split(' ')[0];
    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td>${name}</td>
      <td><button class="btn btn-sm btn-outline-warning" onclick="restartService('${name}')"><i class='ti ti-rotate-clockwise'></i> Reiniciar</button></td>`;
    table.appendChild(tr);
  });
}

async function restartService(name) {
  await fetch('/api/system/update-os', { method: 'POST' }); // simulado, cambiar endpoint si se implementa
  alert(`Servicio ${name} reiniciado (simulado)`);
}

// üåê Red
async function loadNetwork() {
  const res = await fetch('ip a');
  document.getElementById('networkInfo').textContent = res.ok ? await res.text() : 'No disponible';
}

// üîß FullPageOS
async function loadFullPageOS() {
  const config = await getJSON('/api/system/fullpageos/config');
  const fp = await getJSON('/api/system/fullpageos/settings');
  document.getElementById('configTxt').value = config.config || '';
  document.getElementById('fpTxt').value = fp.config || '';
}

// üéØ Eventos
document.getElementById('refreshLogs').onclick = loadLogs;
document.getElementById('refreshServices').onclick = loadServices;
document.getElementById('refreshNetwork').onclick = loadNetwork;
document.getElementById('saveConfig').onclick = async () => {
  await fetch('/api/system/fullpageos/config', { method: 'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ content: document.getElementById('configTxt').value }) });
  alert('config.txt guardado');
};
document.getElementById('saveFP').onclick = async () => {
  await fetch('/api/system/fullpageos/settings', { method: 'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ content: document.getElementById('fpTxt').value }) });
  alert('fullpageos.txt guardado');
};
document.getElementById('restartFP').onclick = async () => {
  await fetch('/api/system/fullpageos/restart', { method: 'POST' });
  alert('FullPageOS reiniciado');
};

// üöÄ Inicializaci√≥n
document.addEventListener('DOMContentLoaded', async () => {
  refreshSystem();
  loadHostnameAndTime();
  loadLogs();
  loadServices();
  loadFullPageOS();
});
setInterval(refreshSystem, 5000);
</script>
